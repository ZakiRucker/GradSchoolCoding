######################################################################################
#
# Created by: Rucker, Zaki
# CS3502
# Feb 2018
#
######################################################################################

# import statements

import sys
import random
import socket
import threading
import signal

randomHigh = 20
Negative = str('N')
Affirm = str('Y')

# Get command line arguments

if len(sys.argv) < 4:
	print('Please input in the following format: host, port, and game time.')
	exit(1)
host = socket.gethostbyname('localhost')
port = sys.argv[2]
game_time = sys.argv[3]


# Set up the socket

serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
serversocket.bind((host, int(port)))
serversocket.listen(5)
print('Server %s is listening on port %s.' % (host, port))

how_many = threading.active_count()

# Function definitions

def handleclient(clientsocket, clientaddress):
	# Receive the client's greeting
	clientgreeting = clientsocket.recv(1024)
	invite = "Would you like to play a guessing game? Y or N\r\n"
	clientsocket.send(invite.encode('ascii'))
	inviteResponse = clientsocket.recv(1024)
	inviteResponse = inviteResponse.decode('ascii')
	#print(inviteResponse)

	
	# Handle invitation response

	if inviteResponse == Negative:
		closingMessage = "Goodbye!\r\n"
		clientsocket.send(closingMessage.encode('ascii'))
		clientsocket.close()

	elif inviteResponse == Affirm:
		if how_many <= 1:
			waitingMessage = "Waiting for more players to join\r\n"
			clientsocket.send(waitingMessage.encode('ascii'))
		
		else:
			# Send the welcome message to the client
			guessMessage = ("Pick a number between 1 and %s: \r\n" % randomHigh)
			clientsocket.send(guessMessage.encode('ascii'))


			# Generate a random number for the client to try and guess
			numbertoguess = generatenumber()

			# Main loop

			running = 1

			while running:

				guess = clientsocket.recv(1024)
				guessstring = guess.decode('ascii')
				print(guessstring)
				# Split the guess string up to get the integer guessed
				guess = int(guessstring.split()[1])
				# Incremenent the counter of the number of guesses
				numberofguesses += 1
				running = 1
				# If the player has guessed correctly
				if (guess == numbertoguess):
					messagetosend = ("Correct\r\n")
					clientsocket.send(messagetosend.encode('ascii'))
					running = 0
				else:
					messagetosend = ("Sorry\r\n")
					# Send the response to the player
					clientsocket.send(messagetosend.encode('ascii'))
			

			# Close the connection
				clientsocket.close()
				print("Connection closed.")

			def generatenumber():
				return random.randrange(1, randomHigh)

# Main server loop

while 1:
	(clientsocket, clientaddress) = serversocket.accept()
	print("Connection received from: ", clientaddress)
	threading.Thread(target = handleclient, args =  (clientsocket, clientaddress)).start()
	print("Connection passed to new thread. Returning to listening.")
